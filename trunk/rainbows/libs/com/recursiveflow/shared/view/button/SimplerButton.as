package com.recursiveflow.shared.view.button {    import flash.display.DisplayObject;    import flash.display.MovieClip;    import flash.display.Sprite;    import flash.events.MouseEvent;        /**     * Provides a simpler, more flexible approach to managing button controls than      * that provided by the SimpleButton class in the Flash API.      *     * @author Alastair Dant     */    public class SimplerButton    {        protected var source : Sprite;        protected var hitZone : Sprite;        public function SimplerButton(source:Sprite)        {            this.source = source;            			createHitArea();                        enable();        }        protected function createHitArea() : void        {            this.hitZone = new Sprite();        	            this.hitZone.graphics.beginFill(0xFF0000, 0.5);            this.hitZone.graphics.drawRect(0, 0, source.width, source.height);            this.hitZone.graphics.endFill();                        source.addChild(hitZone);        }        public function enable() : void        {            hitZone.addEventListener(MouseEvent.MOUSE_OVER, showHoverState);            hitZone.addEventListener(MouseEvent.MOUSE_OUT, showDefaultState);            hitZone.addEventListener(MouseEvent.MOUSE_DOWN, handleClick);            hitZone.addEventListener(MouseEvent.MOUSE_UP, showDefaultState);                        hitZone.buttonMode = true;            hitZone.useHandCursor = true;                        showDefaultState();        }                protected function handleClick(event : MouseEvent) : void        {        	showClickState(event);        }        public function disable() : void        {            hitZone.removeEventListener(MouseEvent.MOUSE_OVER, showHoverState);            hitZone.removeEventListener(MouseEvent.MOUSE_OUT, showDefaultState);            hitZone.removeEventListener(MouseEvent.MOUSE_DOWN, handleClick);            hitZone.removeEventListener(MouseEvent.MOUSE_UP, showDefaultState);                        hitZone.buttonMode = false;            hitZone.useHandCursor = false;                        showDefaultState();        }        protected function showClickState(event : MouseEvent) : void        {            if (source is MovieClip) (source as MovieClip).gotoAndStop("Down");        }        protected function showDefaultState(event : MouseEvent = null) : void        {            if (source is MovieClip) (source as MovieClip).gotoAndStop("Up");        }        protected function showHoverState(event : MouseEvent = null) : void        {            if (source is MovieClip) (source as MovieClip).gotoAndStop("Over");        }                public function getSource() : Sprite        {            return source;        }            }}