package com.recursiveflow.shared.audio {    import flash.net.URLRequest;        import flash.events.Event;    import flash.events.IOErrorEvent;    import flash.events.ProgressEvent;    import flash.media.Sound;    import flash.media.SoundTransform;    import flash.media.SoundChannel;            /**     * Wraps Flash medio API features into a reusable audio player.     *      * @author Alastair Dant     */    public class Player     {        private var sourceURL : String;        private var soundClip : Sound;        private var transform : SoundTransform;        private var playback : SoundChannel;        public function getSource() : String        {            return sourceURL;        }        public function load(source : URLRequest, onProgress:Function, onComplete:Function) : void        {        	if (sourceURL != source.url)        	{	        	sourceURL = source.url;	        		        	trace("loading sound at " + sourceURL);	        		        	if (playback) 	        	{	        		playback.stop();		            playback = null;	        			        		soundClip.removeEventListener(Event.COMPLETE, onComplete);	        		soundClip.removeEventListener(Event.COMPLETE, handleSoundLoaded);		            soundClip.removeEventListener(ProgressEvent.PROGRESS, onProgress);		            soundClip.removeEventListener(IOErrorEvent.IO_ERROR, handleSoundFailed);	            		            soundClip = null;	        	}	        		            soundClip = new Sound();	            	           	soundClip.addEventListener(Event.COMPLETE, handleSoundLoaded);	            soundClip.addEventListener(IOErrorEvent.IO_ERROR, handleSoundFailed);	           	soundClip.addEventListener(Event.COMPLETE, onComplete);	            soundClip.addEventListener(ProgressEvent.PROGRESS, onProgress);	            		            soundClip.load(source);                  	}          }         public function play(volume:Number = 1, panning:Number = 0) : void        {        	transform.volume = volume; 	        	transform.pan = panning;		        	        	playback = soundClip.play(0, 1, transform);	        }                private function handleSoundLoaded(event:Event):void         {        	transform = new SoundTransform();        }        private function handleSoundFailed(event:IOErrorEvent):void         {        	trace(event.text);        }    }}