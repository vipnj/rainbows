package com.recursiveflow.rainbows.view {    import flash.display.Sprite;    import flash.events.MouseEvent;        import com.recursiveflow.rainbows.view.LetterBall;    import com.recursiveflow.shared.controller.Command;    import com.recursiveflow.shared.view.button.CommandButton;        /**     * Uses the LetterBall as the visual basis for a CommandButton.     *      * Alters the translucency of the ball according to the hit state.     *      * @author Alastair Dant     */    public class LetterButton extends CommandButton     {        public function LetterButton(letter : String, colour : Number, handler:Command)        {            super(new LetterBall(letter, colour), handler);        }                        protected override function createHitArea() : void        {            this.hitZone = new Sprite();        	            this.hitZone.graphics.beginFill(0xFF0000, 0);            this.hitZone.graphics.drawCircle(0, 0, 20);            this.hitZone.graphics.endFill();                        source.addChild(hitZone);        }                protected override function showClickState(e : MouseEvent) : void        {        	source.alpha = 1;        	source.scaleX = source.scaleY = 0.9;        }        protected override function showDefaultState(e : MouseEvent = null) : void        {        	source.alpha = 0.2;        	source.scaleX = source.scaleY = 1;        }        protected override function showHoverState(e : MouseEvent = null) : void        {        	source.alpha = 1;        	source.scaleX = source.scaleY = 1.2;        }        }}